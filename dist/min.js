/*! For license information please see min.js.LICENSE.txt */
var mylib;(()=>{"use strict";var __webpack_modules__={"./assets/js/refactor/main-refactor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils-refactor.js */ \"./assets/js/refactor/utils-refactor.js\");\n\r\n__webpack_require__.e(/*! import() */ \"assets_css_main_css\").then(__webpack_require__.bind(__webpack_require__, /*! ../../css/main.css */ \"./assets/css/main.css\"))\r\n\r\n// const body = document.querySelector('body')\r\n// window.onresize = (e) => {\r\n//     if (body.offsetWidth > 500) {\r\n//         import('../../css/main.css');\r\n//     } else {\r\n//         import('../../css/main.css')\r\n//         import('../../css/small.css')\r\n//     }\r\n// }\r\n\r\n// if (body.offsetWidth > 500) {\r\n//     import('../../css/main.css');\r\n// }\r\n// else {\r\n//     import('../../css/main.css')\r\n//     import('../../css/small.css')\r\n// }\r\n\r\nconsole.log(window.matchMedia('(max-width: 500px)').matches)\r\n\r\n//#region app node \r\nconst app = document.querySelector('app');\r\nconst formAddNote = app.querySelector('add-note');\r\nconst formInputNote = app.querySelector('.input-note');\r\nconst formBtnAddNote = app.querySelector('.btn-add');\r\nconst listPin = app.querySelector('list-pin');\r\nconst listNote = app.querySelector('list-note');\r\n//#endregion app node \r\n\r\n//#region Secondary indicator\r\nconst indicator1 = app.querySelector('#indicator1');\r\nconst indicator2 = app.querySelector('#indicator2');\r\n//#endregion Secondary indicator\r\n\r\n//#region anvanced edit node\r\nconst overlay = document.querySelector('overlay');\r\nconst detailsEditHeader = overlay.querySelector('header');\r\nconst detailsEditPinIcon = overlay.querySelector('.icon-pin');\r\nconst detailsEditText = overlay.querySelector('content');\r\nconst detailsTimeDeadline = overlay.querySelector('deadline');\r\nconst detailsTimeCreate = overlay.querySelector('time-create');\r\nconst detailsInputDeadline = overlay.querySelector('.input-deadline');\r\nconst detailsInputColor = overlay.querySelector('.input-color');\r\nconst detailsTabColor = overlay.querySelector('tab');\r\nconst detailsBtnCancel = overlay.querySelector('.btn-cancel');\r\nconst detailsSubmitColor = overlay.querySelector('.btn-submit-color');\r\nconst detailsIconCopy = overlay.querySelector('.icon-copy');\r\nconst detailsIconRecycleBin = overlay.querySelector('.icon-recycle-bin');\r\nconst detailsEditClose = overlay.querySelector('close');\r\n//#endregion anvanced edit node\r\n\r\nconst cloneElmDrag = document.querySelector('.item-drag');\r\nconst CONST_LS_KEY = 'TODO-LIST';\r\nconst CONST_TODO_STATUS = { // enumeration\r\n    PENDING: 0,\r\n    DOING: 1,\r\n    COMPLETED: 2,\r\n    CANCELED: -1,\r\n}\r\nconst COLOR_DEFAULT = 'var(--app-color-1)';\r\n\r\n//#endregion declare const\r\n\r\nconst appOOP = {\r\n    //#region declare\r\n    onEdit: false, // Flag\r\n\r\n    // Data note \r\n    dataTodos: [],\r\n    _data: [], // private property // accessed via GETTER / SETTER\r\n\r\n    //#region DOM collection\r\n    listNoteUnpin: [],\r\n    listNotePin: [],\r\n    itemMove: [],\r\n    //#endregion DOM collection\r\n\r\n    //#region from & to index note\r\n    toIndex: 0,\r\n    fromIndex: 0,\r\n    //#endregion from & to index note\r\n\r\n    //#region coordinate & size\r\n    topUnpin: 0,\r\n    topPin: 0,\r\n    heightNote: 0,\r\n    itemOffsetY: 0,\r\n    mouseDownPageY: 0,\r\n    //#endregion coordinate & size\r\n    //#endregion declare\r\n\r\n    //#region getter, setter\r\n    get data() {\r\n        return this._data\r\n    }, // getter\r\n    set data(value) {\r\n        this._data = value;\r\n\r\n        // do stuff\r\n        this.sortData();\r\n        this.render();\r\n        this.handleEvents();\r\n        this.localSet();\r\n    }, // setter\r\n    //#endregion getter, setter\r\n\r\n    //#region localStorage\r\n    localSet: function () {\r\n        localStorage.setItem(CONST_LS_KEY, JSON.stringify(appOOP.dataTodos));\r\n    }, // localSet\r\n\r\n    localGet: function () {\r\n        const cached = localStorage.getItem(CONST_LS_KEY);\r\n        if (cached)\r\n            return JSON.parse(cached);\r\n\r\n        return [];\r\n    }, // localGet\r\n    // #endregion localStorage\r\n\r\n    //#region helping func\r\n    inputValueLength: function () {\r\n        return formInputNote.value.length;\r\n    }, // inputValueLength\r\n    //#endregion Helping func\r\n\r\n    //#region sort data\r\n    sortData: function () {\r\n        const arrPin = appOOP.dataTodos.filter(elm => {\r\n            return elm.pin == true;\r\n        });\r\n\r\n        const arrUnpin = appOOP.dataTodos.filter(elm => {\r\n            return elm.pin == false;\r\n        });\r\n\r\n        appOOP.dataTodos = arrPin.concat(arrUnpin);\r\n    }, // sortData\r\n\r\n    sortDataDeadline: function () {\r\n        let time = (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getDateParts)();\r\n        time = [\r\n            time.day.toString().padStart(2, 0),\r\n            time.month.toString().padStart(2, 0),\r\n            time.year\r\n        ];\r\n        const todayTxt = time.reverse().toString().replace(/,/g, '-');\r\n\r\n        function compareDate(a, b) {\r\n            const deadlineProcessedA = a.deadline.split('-').reverse().join('-');\r\n            const deadlineProcessedB = b.deadline.split('-').reverse().join('-');\r\n\r\n            return (\r\n                deadlineProcessedA < deadlineProcessedB ?\r\n                    -1 :\r\n                    deadlineProcessedA > deadlineProcessedB ?\r\n                        1 :\r\n                        0\r\n            );\r\n        } // compare\r\n\r\n        let expiredTodos = [], notExpiredTodos = [];\r\n        appOOP.dataTodos.forEach(item => {\r\n            const deadlineProcessed = item.deadline.split('-').reverse();\r\n\r\n            if (item.deadline == '' || deadlineProcessed.join('-') >= todayTxt) notExpiredTodos.push(item);\r\n            else expiredTodos.push(item);\r\n        }); // forEach\r\n\r\n        const expiredTodosSorted = expiredTodos.sort(compareDate);\r\n        appOOP.dataTodos = [...expiredTodosSorted, ...notExpiredTodos];\r\n        appOOP.data = [...appOOP.dataTodos];\r\n    }, // sortDataDeadline\r\n    //#endregion sort data\r\n\r\n    //#region render\r\n    render: function () {\r\n        const dataPin = this.dataTodos.filter(item => item.pin);\r\n        const dataPinLength = dataPin.length;\r\n        const dataUnPin = this.dataTodos.slice(dataPinLength);\r\n        const htmlsTodos = dataUnPin.map((item) => {\r\n            return `   \r\n                <li style=\"border-color: ${item.color};\" class=\"item-note ${item.status == 2 ? 'strikethrough' : ''}\" data-index=\"${item.id}\" >\r\n                    <up-down draggable=\"true\">\r\n                        <i class=\"icon-drag fa-solid fa-grip-vertical\"></i>\r\n                    </up-down>\r\n                    <input class=\"checkbox-hide\" type=\"checkbox\" ${item.status == 2 ? 'checked' : ''}>\r\n                    <span style=\"border-color: ${item.color};\" class=\"checkbox-complete\"></span>\r\n                    <span ${(0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getTotalDaysDifferent)((0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentTime_ISOformat)(), item.date) < 0 ? 'style=\"color:red;\"' : ''} class=\"item-text\">${item.text}</span>\r\n                    <button class=\"btn-delete\">x</button>\r\n                    <i class=\"icon-save\"></i>\r\n                    <i id=\"icon-details\" class=\"fa-solid fa-expand\"></i>\r\n                    <div class=\"indicator-drag\"></div>\r\n                </li>\r\n                    `;\r\n        }).join('');\r\n\r\n        if (dataPinLength > 0) {\r\n            listPin.classList.remove('hide');\r\n            const htmlPin = dataPin.map((item) => {\r\n                return `\r\n                    <li style=\"border-color: ${item.color};\" class=\"item-note ${item.status == 2 ? 'strikethrough' : ''}\" data-index=\"${item.id}\" >\r\n                        <up-down draggable=\"true\">\r\n                            <i class=\"icon-drag fa-solid fa-grip-vertical\"></i>\r\n                        </up-down>\r\n                        <input class=\"checkbox-hide\" type=\"checkbox\" ${item.status == 2 ? 'checked' : ''}>\r\n                        <span style=\"border-color: ${item.color};\" class=\"checkbox-complete\"></span>\r\n                        <span  ${(0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getTotalDaysDifferent)((0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentTime_ISOformat)(), item.date) < 0 ? 'style=\"color:red;\"' : ''} class=\"item-text\">${item.text}</span>\r\n                        <button class=\"btn-delete\">x</button>\r\n                        <i class=\"icon-save\"></i>\r\n                        <i id=\"icon-details\" class=\"fa-solid fa-expand\"></i>\r\n                        <div class=\"indicator-drag\"></div>\r\n                    </li>\r\n                        `;\r\n            }).join('');\r\n            listPin.innerHTML = `\r\n                <h3 class=\"title-pin\">List Pin Note</h3>\r\n            ${htmlPin}\r\n            `;\r\n        } else\r\n            listPin.classList.add('hide');\r\n\r\n        listNote.innerHTML = htmlsTodos;\r\n    }, // render\r\n\r\n    renderDetails: function (e) {\r\n        const outerId = e.target.parentNode.dataset.index;\r\n        const todo = appOOP.dataTodos.find(entry => entry.id === outerId);\r\n\r\n        const htmlContent = `\r\n                <li class=\"item-note bla ${todo.status == 2 ? 'strikethrough2' : ''}\" data-index=\"${outerId}\" >\r\n                    <input class=\"checkbox-hide\" type=\"checkbox\" onclick=\"appOOP.strikethroughItem(appOOP)\" ${todo.status == 2 ? 'checked' : ''}>\r\n                    <span style=\"border-color: ${todo.color};\" class=\"checkbox-complete\"></span>\r\n                    <span contenteditable=\"true\" ${(0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getTotalDaysDifferent)((0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentTime_ISOformat)(), todo.date) < 0 ? 'style=\"color:red;\"' : ''} class=\"item-text\">${todo.text}</span>\r\n                    <i class=\"show icon-save\" id=\"icon-save-inner\" onclick=\"appOOP.submitText(appOOP)\"></i>\r\n                </li>\r\n                `;\r\n        detailsTimeCreate.innerText = todo.date;\r\n        detailsTimeDeadline.innerText = todo.deadline == '' ? '' : (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getDateDifferent)(todo.deadline).text;\r\n\r\n        detailsEditText.innerHTML = htmlContent;\r\n    }, // renderDetails\r\n    //#endregion render\r\n\r\n    //#region add/edit/delete note\r\n    createNote: function () {\r\n        const id = `${Date.now()}`;\r\n        let item, itemText, checkboxHide, checkboxShow, btnDelete, iconSave, fullIcon, upDown, dragIcon, indicatorDrag;\r\n\r\n        // Create item\r\n        item = document.createElement(\"li\");\r\n        indicatorDrag = document.createElement(\"div\");\r\n        fullIcon = document.createElement(\"i\");\r\n        itemText = document.createElement(\"span\");\r\n        checkboxHide = document.createElement(\"input\");\r\n        checkboxShow = document.createElement(\"span\");\r\n        btnDelete = document.createElement(\"button\");\r\n        iconSave = document.createElement('i');\r\n        upDown = document.createElement('up-down');\r\n        dragIcon = document.createElement('i');\r\n        dragIcon.setAttribute('class', 'icon-drag fa-solid fa-grip-vertical');\r\n        upDown.appendChild(dragIcon);\r\n\r\n        // Add attribute\r\n        item.className = 'item-note';\r\n        indicatorDrag.className = 'indicator-drag';\r\n        fullIcon.className = 'fa-solid fa-expand';\r\n        itemText.className = 'item-text';\r\n        btnDelete.className = 'btn-delete';\r\n        checkboxHide.className = 'checkbox-hide';\r\n        checkboxShow.className = 'checkbox-complete';\r\n        iconSave.className = 'icon-save';\r\n        item.setAttribute(\"draggable\", \"true\");\r\n        checkboxHide.setAttribute(\"type\", \"checkbox\");\r\n        item.setAttribute(\"data-index\", id);\r\n        fullIcon.setAttribute('id', 'icon-details');\r\n\r\n        // Add text\r\n        itemText.innerText = formInputNote.value;\r\n        btnDelete.appendChild(document.createTextNode(\"x\"));\r\n\r\n        // Assign element to item\r\n        item.appendChild(checkboxHide);\r\n        item.appendChild(checkboxShow);\r\n        item.appendChild(fullIcon);\r\n        item.appendChild(indicatorDrag);\r\n        item.appendChild(upDown);\r\n        item.appendChild(itemText);\r\n        item.appendChild(btnDelete);\r\n        item.appendChild(iconSave);\r\n        listNote.appendChild(item);\r\n\r\n        formInputNote.value = \"\";\r\n        upDown.ontouchstart = (e) => appOOP.todo = appOOP.getElmWhenMouseDown(e);\r\n        upDown.ontouchmove = (e) => {\r\n            e.preventDefault();\r\n            appOOP.useDisplayIndicator(e, 'MOBILE');\r\n        }\r\n        upDown.ontouchend = (e) => appOOP.dropElm(e);\r\n        item.ondragstart = (e) => appOOP.todo = appOOP.getElmWhenMouseDown(e);\r\n        item.ondragenter = (e) => appOOP.useDisplayIndicator(e, 'PC');\r\n        item.ondragend = (e) => appOOP.dropElm(e);\r\n\r\n        btnDelete.onclick = appOOP.deleteTodo;\r\n        checkboxHide.onclick = (e) => appOOP.strikethroughItem(e.target);\r\n        iconSave.onclick = (e) => appOOP.updateText(e.target);\r\n        iconSave.onclick = appOOP.clickIconTick;\r\n        itemText.onclick = appOOP.clickItem;\r\n        fullIcon.onclick = appOOP.clickIconFull;\r\n\r\n        appOOP.addTodo(id, itemText.innerText);\r\n    }, // createNote\r\n\r\n    statusOnEdit: function (boolean) {\r\n        if (boolean) {\r\n            appOOP.onEdit = true;\r\n            formInputNote.setAttribute('disabled', true);\r\n            formBtnAddNote.setAttribute('disabled', true);\r\n        } else {\r\n            appOOP.onEdit = false;\r\n            formInputNote.removeAttribute('disabled');\r\n            formBtnAddNote.removeAttribute('disabled');\r\n        }\r\n    }, // statusOnEdit\r\n\r\n    addTodo: function (id, todoText) {\r\n        appOOP.dataTodos.push({\r\n            id,\r\n            text: todoText,\r\n            date: (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentTime_ISOformat)(),\r\n            pin: false,\r\n            deadline: '',\r\n            color: COLOR_DEFAULT,\r\n            status: CONST_TODO_STATUS.DOING,\r\n        });\r\n        appOOP.localSet();\r\n    }, // addTodo\r\n\r\n    submitText: function (elm) {\r\n        const ElmText = elm.parentNode.querySelector('.item-text');\r\n        const newText = ElmText.textContent;\r\n        const id = elm.parentNode.dataset.index;\r\n\r\n        if (newText.trim().length < 1) {\r\n            alert('Không được để note trống');\r\n            return setTimeout(() => {\r\n                ElmText.click(); // trigger\r\n            }, 100);\r\n        }\r\n\r\n        appOOP.statusOnEdit(false);\r\n        appOOP.updateTodo(id, 'text', newText);\r\n        appOOP.data = [...appOOP.dataTodos];\r\n    }, // submitText\r\n\r\n    updateTodo: function (id, property, value) {\r\n        appOOP.dataTodos = appOOP.dataTodos.map((item) => {\r\n            if (item.id !== id)\r\n                return item;\r\n            else\r\n                return {\r\n                    ...item,\r\n                    [property]: value\r\n                } // return\r\n        }); // map\r\n    }, // updateTodo\r\n\r\n    deleteTodo: function (e) {\r\n        if (appOOP.onEdit)\r\n            return;\r\n\r\n        const listElement = e.target.parentNode;\r\n        const id = listElement.dataset.index;\r\n        listElement.parentNode.removeChild(listElement);\r\n\r\n        if (listPin.children.length === 1)\r\n            listPin.classList.add('hide');\r\n        else\r\n            listPin.classList.remove('hide');\r\n\r\n        appOOP.dataTodos = appOOP.dataTodos.filter(item => item.id !== id);\r\n        appOOP.localSet();\r\n    }, // deleteTodo\r\n    //#endregion add/edit/delete note\r\n\r\n    //#region work with notes\r\n    strikethroughItem: function (elm) {\r\n        if (elm.hasAttribute('checked')) {\r\n            elm.parentNode.classList.remove('strikethrough');\r\n            elm.removeAttribute('checked');\r\n        } else {\r\n            elm.parentNode.classList.add('strikethrough');\r\n            elm.setAttribute('checked', '');\r\n        }\r\n        appOOP.todoStatus(elm);\r\n        appOOP.localSet();\r\n    }, // strikethroughItem\r\n\r\n    todoStatus: function (elm) {\r\n        const id = elm.parentNode.dataset.index;\r\n        const hasAtr = elm.parentNode.querySelector('.checkbox-hide').hasAttribute('checked');\r\n\r\n        if (hasAtr)\r\n            appOOP.updateTodo(id, 'status', CONST_TODO_STATUS.COMPLETED);\r\n        else\r\n            appOOP.updateTodo(id, 'status', CONST_TODO_STATUS.DOING);\r\n\r\n        appOOP.submitText(elm);\r\n        appOOP.localSet();\r\n    }, // todoStatus\r\n\r\n    focusNote: function (e) {\r\n        const btnDelete = e.target.parentNode.querySelector('.btn-delete');\r\n        const btnSave = e.target.parentNode.querySelector('.icon-save');\r\n        const idOuter = e.target.parentNode.dataset.index;\r\n\r\n        if (appOOP.onEdit)\r\n            return;\r\n\r\n        Array.from(listNote.children).forEach((item) => {\r\n            const btnDelete = item.querySelector('.btn-delete');\r\n            const tick = item.querySelector('.checkbox-complete');\r\n            const idInner = item.dataset.index;\r\n            const fullIcon = item.querySelector('#icon-details');\r\n            const upDown = item.querySelector('up-down');\r\n\r\n            if (idInner !== idOuter) {\r\n                tick.classList.add('lock-checkbox');\r\n                btnDelete.classList.add('hide');\r\n                fullIcon.classList.add('hide');\r\n                upDown.classList.add('hide');\r\n            }\r\n        });\r\n\r\n        appOOP.statusOnEdit(true);\r\n\r\n        e.target.setAttribute('contenteditable', true);\r\n\r\n        setTimeout(() => {\r\n            e.target.focus();\r\n        }, 50);\r\n\r\n        e.target.parentNode.classList.add('focus-item');\r\n        btnDelete.classList.add('hide');\r\n        btnSave.classList.add('show');\r\n\r\n    }, // clickItem\r\n\r\n    clickIconSave: function (e) {\r\n        const listElement = e.target.parentNode;\r\n        const idOuter = e.target.parentNode.dataset.index;\r\n        const btnDelete = listElement.querySelector('.btn-delete');\r\n        const itemText = listElement.querySelector('.item-text');\r\n        const iconSave = listElement.querySelector('.icon-save');\r\n\r\n        itemText.removeAttribute('contenteditable');\r\n\r\n        listElement.classList.remove('focus-item');\r\n        btnDelete.classList.remove('hide');\r\n\r\n        appOOP.submitText(e.target);\r\n        iconSave.classList.remove('show');\r\n\r\n        Array.from(listNote.children).forEach((item) => {\r\n            const btnDelete = item.querySelector('.btn-delete');\r\n            const checkboxShow = item.querySelector('.checkbox-complete');\r\n            const fullIcon = item.querySelector('#icon-details');\r\n            const idInner = item.dataset.index;\r\n\r\n            if (idInner !== idOuter) {\r\n                checkboxShow.classList.remove('lock-checkbox');\r\n                btnDelete.classList.remove('hide');\r\n                fullIcon.classList.remove('hide');\r\n            }\r\n        });\r\n\r\n        appOOP.onEdit = false;\r\n    }, // clickIconSave\r\n\r\n    showDetails: function (e) {\r\n        const note = e.target.parentNode;\r\n        const id = note.dataset.index;\r\n\r\n        appOOP.dataTodos.forEach(item => {\r\n            if (item.id == id) {\r\n                detailsEditHeader.style.background = `linear-gradient(to bottom, ${item.color},  white`;\r\n                if (item.pin == true) {\r\n                    detailsEditPinIcon.classList.add('pin-item');\r\n                } else {\r\n                    detailsEditPinIcon.classList.remove('pin-item');\r\n                }\r\n            }\r\n        }); // forEach\r\n\r\n        overlay.classList.remove('hide');\r\n        appOOP.submitText(e.target);\r\n        appOOP.renderDetails(e);\r\n    }, // showDetails\r\n    //#endregion work with notes\r\n\r\n    //#region event drag drop\r\n    getElmWhenMouseDown: function (e) {\r\n        const item = e.target.closest('.item-note');\r\n        const text = item.querySelector('.item-text').textContent;\r\n        const id = item.dataset.index;\r\n        const todo = appOOP.dataTodos.find(item => {\r\n            return item.id === id;\r\n        });\r\n\r\n        const dragItem = document.querySelector('.item-drag');\r\n        const dragText = dragItem.querySelector('.text-drag');\r\n        const checkboxDrag = dragItem.querySelector('.checkbox-hide');\r\n        const checkboxShowDrag = dragItem.querySelector('.checkbox-complete');\r\n\r\n        app.querySelectorAll('.item-note').forEach(item => {\r\n            if (item.dataset.index == id) {\r\n                dragItem.style.borderColor = todo.color;\r\n                checkboxShowDrag.style.borderColor = todo.color;\r\n            }\r\n        });\r\n\r\n        dragText.innerText = text;\r\n        if (todo.status == 2) {\r\n            dragItem.classList.add('strikethrough');\r\n            checkboxDrag.setAttribute('checked', '');\r\n        }\r\n        else {\r\n            dragItem.classList.remove('strikethrough');\r\n            checkboxDrag.removeAttribute('checked');\r\n        }\r\n        appOOP.fromIndex = appOOP.dataTodos.indexOf(todo);\r\n        cloneElmDrag.classList.remove('hide');\r\n        appOOP.mouseDownPageY = e.pageY || e.targetTouches[0].pageY;\r\n        item.classList.add('blur');\r\n\r\n        // get height last child list pin and list unpin\r\n        const pinLastItem = Array.from(listPin.children).at(-1);\r\n        const unpinFirstItem = Array.from(listNote.children)[0];\r\n\r\n        if (listNote.childElementCount > 0) {\r\n            appOOP.topUnpin = unpinFirstItem.getBoundingClientRect().y - item.offsetHeight + 5;\r\n        }\r\n        // indicator1 offsetHeight\r\n        appOOP.heightNote = item.offsetHeight;\r\n        appOOP.topPin = pinLastItem.getBoundingClientRect().y + 5;\r\n\r\n        return todo;\r\n    }, // getElmWhenMouseDown\r\n\r\n    displayIndicator: function (e, index, device) {\r\n        const item = e.target.closest('.item-note');\r\n        const titlePin = app.querySelector('.title-pin');\r\n        appOOP.listNotePin = Array.from(listPin.children);\r\n        appOOP.listNotePin.shift();\r\n        appOOP.listNoteUnpin = Array.from(listNote.children);\r\n        const listAllNote = appOOP.listNotePin.concat(appOOP.listNoteUnpin);\r\n        const computedAddNote = formAddNote.offsetHeight + Number(getComputedStyle(formAddNote).marginTop.replace('px', ''));\r\n        const computedPin = listPin.offsetHeight + Number(getComputedStyle(listPin).marginTop.replace('px', '')) + Number(getComputedStyle(listPin).marginBottom.replace('px', ''));\r\n        const computedTitlePin = titlePin.offsetHeight + Number(getComputedStyle(titlePin).marginTop.replace('px', '')) + Number(getComputedStyle(titlePin).marginBottom.replace('px', ''));\r\n        const checkDeviceY = device == 'PC' ? e.pageY : e.targetTouches[0].pageY;\r\n        const checkDeviceX = device == 'PC' ? e.pageX : e.targetTouches[0].pageX;\r\n\r\n        if (listPin.className === 'hide') {\r\n            indicator1.style.top = computedAddNote + 5;  // indicator1.offsetHeight \r\n        } else {\r\n            indicator1.style.top = computedAddNote + computedPin - 5;\r\n        }\r\n\r\n        listAllNote.forEach(elm => {\r\n            try {\r\n                const nodeIndicatorDown = listAllNote[index];\r\n                const nodeIndicatorUp = listAllNote[index - 1];\r\n                if (checkDeviceY < appOOP.mouseDownPageY) {\r\n                    elm.classList.remove('ondrag');\r\n                    indicator1.style.display = 'none';\r\n\r\n                    if (elm == nodeIndicatorUp && index !== listPin.childElementCount - 1)\r\n                        elm.classList.add('ondrag');\r\n\r\n                    else if (index == listPin.childElementCount - 1)\r\n                        indicator1.style.display = 'block';\r\n\r\n                    else if (index == 0 && listPin.className !== 'hide') {\r\n                        indicator1.style.display = 'block';\r\n                        indicator1.style.top = computedAddNote + computedTitlePin - 5;\r\n                    }\r\n                } else {\r\n                    elm.classList.remove('ondrag');\r\n                    indicator1.style.display = 'none';\r\n\r\n                    if (elm == nodeIndicatorDown)\r\n                        elm.classList.add('ondrag');\r\n                }\r\n            } catch { }\r\n\r\n            if (appOOP.fromIndex < appOOP.listNotePin.length && index === appOOP.listNotePin.length && e.offsetY < appOOP.heightNote / 2) {\r\n                elm.classList.remove('ondrag');\r\n                indicator2.style.display = 'block';\r\n                indicator2.style.top = appOOP.topUnpin + window.scrollY;\r\n            }\r\n            else if (item === appOOP.listNotePin.at(-1) && index === appOOP.listNotePin.length - 1 && e.offsetY > appOOP.heightNote / 2) {\r\n                elm.classList.remove('ondrag');\r\n                indicator2.style.display = 'block';\r\n                indicator2.style.top = appOOP.topPin + window.scrollY;\r\n                indicator1.style.display = 'none';\r\n            } else {\r\n                indicator2.style.display = 'none';\r\n            }\r\n        }); // forEach\r\n\r\n        appOOP.itemMove = item;\r\n        appOOP.itemOffsetY = e.offsetY;\r\n        cloneElmDrag.style.top = checkDeviceY;\r\n        cloneElmDrag.style.left = checkDeviceX;\r\n    }, // indicatorDrag\r\n\r\n    dropElm: function (e) {\r\n        const item = e.target.closest('.item-note');\r\n        const id = item.dataset.index;\r\n\r\n        cloneElmDrag.classList.add('hide');\r\n        item.classList.add('blur');\r\n        indicator1.style.display = 'none';\r\n        indicator2.style.display = 'none';\r\n\r\n        if (appOOP.toIndex < listPin.childElementCount - 1) {\r\n            appOOP.dataTodos = appOOP.dataTodos.map(elm => {\r\n                if (elm.id !== id)\r\n                    return elm;\r\n\r\n                return {\r\n                    ...elm,\r\n                    pin: true\r\n                }\r\n            }) // map\r\n        } else {\r\n            appOOP.dataTodos = appOOP.dataTodos.map(elm => {\r\n                if (elm.id !== id)\r\n                    return elm;\r\n\r\n                return {\r\n                    ...elm,\r\n                    pin: false\r\n                }\r\n            }) // map\r\n        }\r\n        let toIndex2;\r\n\r\n        if (appOOP.fromIndex > appOOP.listNotePin.length - 1 && appOOP.itemMove === appOOP.listNotePin.at(-1) && appOOP.itemOffsetY > appOOP.heightNote / 2)\r\n            toIndex2 = appOOP.fromIndex + 1;\r\n        else if (appOOP.fromIndex <= appOOP.listNotePin.length && appOOP.itemMove === appOOP.listNoteUnpin.at(0) && appOOP.itemOffsetY < appOOP.heightNote / 2) {\r\n            toIndex2 = appOOP.toIndex - 1;\r\n        }\r\n        else toIndex2 = appOOP.toIndex;\r\n\r\n        if (toIndex2 === -1) {\r\n            toIndex2 = 0;\r\n        }\r\n\r\n        (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.moveItem)(appOOP.dataTodos, appOOP.fromIndex, toIndex2);\r\n\r\n        appOOP.data = [...appOOP.dataTodos];\r\n    }, // dropElm\r\n\r\n    useDisplayIndicator: function (e, device) {\r\n        // PC\r\n        if (device === 'PC') {\r\n            const itemPC = e.target.closest('.item-note');\r\n            const idPC = itemPC.dataset.index;\r\n            const todoPC = appOOP.dataTodos.find(elm => {\r\n                return elm.id === idPC;\r\n            });\r\n\r\n            const indexTodoPc = appOOP.dataTodos.indexOf(todoPC);\r\n\r\n            appOOP.displayIndicator(e, indexTodoPc, 'PC');\r\n\r\n            appOOP.toIndex = appOOP.dataTodos.indexOf(todoPC);\r\n        } else {\r\n            // Mobile\r\n            const itemMb = document.elementFromPoint(e.targetTouches[0].pageX, e.targetTouches[0].pageY).closest('.item-note');\r\n            const idMb = itemMb.dataset.index;\r\n            const todoMb = appOOP.dataTodos.find(elm => {\r\n                return elm.id === idMb;\r\n            });\r\n\r\n            const indexTodoMb = appOOP.dataTodos.indexOf(todoMb);\r\n            appOOP.displayIndicator(e, indexTodoMb, 'MOBILE');\r\n            appOOP.toIndex = appOOP.dataTodos.indexOf(todoMb);\r\n        }\r\n    }, // useDisplayIndicator\r\n    //#endregion event drag drop\r\n\r\n    handleEvents: function () {\r\n        //#region event form add note\r\n        formBtnAddNote.onclick = () => {\r\n            const OS = (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.checkEnvironment)().os;\r\n\r\n            if (appOOP.inputValueLength() > 0) {\r\n                appOOP.createNote();\r\n            }\r\n\r\n            if (OS === 'Linux' || OS === 'Android' || OS === 'iOS') {\r\n                app.querySelectorAll('up-down').forEach(item => {\r\n                    item.innerHTML = '<i class=\"icon-up-down fa-solid fa-grip-vertical\"></i>';\r\n                });\r\n            }\r\n        } // btnAddNote.onclick\r\n\r\n        formInputNote.onkeypress = function (e) {\r\n            if (appOOP.inputValueLength() > 0 && e.charCode === 13) {\r\n                appOOP.createNote();\r\n            }\r\n        } // enterKey\r\n        //#endregion event form add note\r\n\r\n        //#region event details\r\n        detailsEditClose.onclick = () => {\r\n            overlay.classList.add('hide');\r\n        } // closeAnvanceEdit.\r\n\r\n        detailsIconRecycleBin.onclick = (e) => {\r\n            const id = e.target.closest('advanced-edit').querySelector('.item-note').dataset.index;\r\n\r\n            appOOP.dataTodos = appOOP.dataTodos.filter((item) => item.id !== id);\r\n            appOOP.localSet();\r\n\r\n            overlay.classList.add('hide');\r\n\r\n            Array.from(listNote.children).forEach((item) => {\r\n                if (item.dataset.index === id) {\r\n                    item.remove();\r\n                }\r\n            });\r\n        } // iconRecycleBin\r\n\r\n        detailsEditPinIcon.onclick = (e) => {\r\n            const id = e.target.closest('advanced-edit').querySelector('.item-note').dataset.index;\r\n\r\n            detailsEditPinIcon.classList.toggle('pin-item');\r\n\r\n            appOOP.dataTodos = appOOP.dataTodos.map(todo => {\r\n                if (todo.id !== id)\r\n                    return todo;\r\n                return {\r\n                    ...todo,\r\n                    pin: !todo.pin\r\n                }\r\n            }) // map\r\n\r\n            appOOP.sortDataDeadline();\r\n            appOOP.data = [...appOOP.dataTodos];\r\n        } // iconPin\r\n\r\n        detailsIconCopy.onclick = (e) => {\r\n            const id = e.target.closest('advanced-edit').querySelector('.item-note').dataset.index;\r\n            let todoCopy = appOOP.dataTodos.find(item => item.id === id);\r\n            const dataCopyId = todoCopy.id;\r\n\r\n            todoCopy = {\r\n                ...todoCopy,\r\n                id: `${Date.now()}`,\r\n                date: (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentTime_ISOformat)()\r\n            }\r\n\r\n            appOOP.dataTodos.push(todoCopy);\r\n\r\n            overlay.classList.add('hide');\r\n\r\n            appOOP.data = [...appOOP.dataTodos];\r\n            Array.from(listNote.children).forEach((item) => {\r\n                const textItem = item.querySelector('.item-text');\r\n\r\n                if (dataCopyId == item.dataset.index) {\r\n                    textItem.click();\r\n                }\r\n            });\r\n            appOOP.sortData();\r\n        } // iconCopy\r\n\r\n        detailsInputColor.onclick = (e) => {\r\n            e.stopPropagation();\r\n            detailsTabColor.classList.add('show');\r\n        } // inputColor\r\n\r\n        detailsBtnCancel.onclick = () => {\r\n            detailsTabColor.classList.remove('show');\r\n        } // tabBtnCancel\r\n\r\n        detailsSubmitColor.onclick = (e) => {\r\n            const id = e.target.closest('advanced-edit').querySelector('.item-note').dataset.index;\r\n\r\n            appOOP.updateTodo(id, 'color', detailsInputColor.value);\r\n\r\n            app.querySelectorAll('.item-note').forEach(item => {\r\n                if (item.dataset.index == id) {\r\n                    item.querySelector('.checkbox-complete').style.borderColor = detailsInputColor.value;\r\n                    item.style.borderColor = detailsInputColor.value;\r\n                }\r\n            });\r\n\r\n            detailsEditHeader.style.background = `linear-gradient(to bottom, ${detailsInputColor.value}, white`;\r\n            detailsTabColor.classList.remove('show');\r\n\r\n            appOOP.localSet();\r\n        } // tabBtnSubmitColor\r\n\r\n        detailsInputDeadline.onchange = (e) => {\r\n            const wrapper = e.target.closest('advanced-edit');\r\n            const textItem = wrapper.querySelector('.item-text');\r\n            const id = wrapper.querySelector('.item-note').dataset.index;\r\n            const { totalDays, text } = (0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getDateDifferent)(detailsInputDeadline.value);\r\n\r\n            detailsTimeDeadline.innerText = text;\r\n\r\n            appOOP.updateTodo(id, 'deadline', detailsInputDeadline.value);\r\n\r\n            if ((0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getTotalDaysDifferent)((0,_utils_refactor_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentTime_ISOformat)(), detailsInputDeadline.value) < 0) {\r\n                textItem.style.color = 'red';\r\n\r\n                Array.from(listNote.children).forEach(item => {\r\n                    if (item.dataset.index == id) {\r\n                        item.querySelector('.item-text').style.color = 'red';\r\n                    }\r\n                }); // Array.from\r\n            } else {\r\n                textItem.style.color = 'var(--color-black-1)';\r\n\r\n                Array.from(listNote.children).forEach(item => {\r\n                    if (item.dataset.index == id) {\r\n                        item.querySelector('.item-text').style.color = 'var(--color-white-1)';\r\n                    }\r\n                }); // Array.from\r\n            } // else\r\n\r\n            if (totalDays < 0)\r\n                appOOP.sortDataDeadline();\r\n\r\n            appOOP.sortData();\r\n            appOOP.localSet();\r\n        } // inputDeadline\r\n\r\n        overlay.onclick = () => {\r\n            detailsTabColor.classList.remove('show');\r\n        } // overlay\r\n        //#endregion event details\r\n\r\n        //#region event notes\r\n        app.querySelectorAll('.item-note').forEach(item => {\r\n            item.ondragstart = (e) => appOOP.getElmWhenMouseDown(e);\r\n            item.ondragenter = (e) => appOOP.useDisplayIndicator(e, 'PC');\r\n            item.ondragend = (e) => appOOP.dropElm(e);\r\n        });\r\n\r\n        app.querySelectorAll('up-down').forEach(item => {\r\n            item.ontouchstart = (e) => {\r\n                appOOP.getElmWhenMouseDown(e);\r\n            };\r\n            item.ontouchmove = (e) => {\r\n                e.preventDefault();\r\n                appOOP.useDisplayIndicator(e, 'MOBILE');\r\n            }\r\n            item.ontouchend = (e) => appOOP.dropElm(e);\r\n        });\r\n\r\n        app.querySelectorAll('.btn-delete').forEach(btn => {\r\n            btn.onclick = (e) => appOOP.deleteTodo(e);\r\n        });\r\n\r\n        app.querySelectorAll('.checkbox-hide').forEach(checkbox => {\r\n            checkbox.onclick = (e) => appOOP.strikethroughItem(e.target);\r\n        });\r\n\r\n        app.querySelectorAll('.item-text').forEach(text => {\r\n            text.onclick = (e) => appOOP.focusNote(e);\r\n        });\r\n\r\n        app.querySelectorAll('.icon-save').forEach(icon => {\r\n            icon.onclick = (e) => appOOP.clickIconSave(e);\r\n        });\r\n\r\n        app.querySelectorAll('#icon-details').forEach(icon => {\r\n            icon.onclick = (e) => appOOP.showDetails(e);\r\n        });\r\n        //#endregion event notes\r\n    }, // handleEvents\r\n\r\n    start() {\r\n        this.dataTodos = this.localGet();\r\n\r\n        setTimeout(() => {\r\n            this.render();\r\n            this.handleEvents();\r\n        }, 1_000); // wait for reading ls in 1 seconds\r\n    }, // start\r\n} // appOOP\r\n\r\nappOOP.start();\n\n//# sourceURL=webpack://mylib/./assets/js/refactor/main-refactor.js?")},"./assets/js/refactor/utils-refactor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkEnvironment\": () => (/* binding */ checkEnvironment),\n/* harmony export */   \"getCurrentTime_ISOformat\": () => (/* binding */ getCurrentTime_ISOformat),\n/* harmony export */   \"getDateDifferent\": () => (/* binding */ getDateDifferent),\n/* harmony export */   \"getDateParts\": () => (/* binding */ getDateParts),\n/* harmony export */   \"getTotalDaysDifferent\": () => (/* binding */ getTotalDaysDifferent),\n/* harmony export */   \"moveItem\": () => (/* binding */ moveItem)\n/* harmony export */ });\n\r\n\r\n// todo.day ISO\r\nconst CONST_GET_M = ['DDMMYYYY', 'YYYYMMDD', 'YYMMDD', 'DDMMMYY', 'DMMMMYYYY', 'DDMMYY', 'YYMMMDD', 'YYYYMMMDD', 'DDMMMYYYY', 'DDMMMMYYYY'];\r\nconst CONST_GET_D = ['MDYYYY', 'MDYY', 'MMDDYY', 'MMDDYYYY', 'MMMMDYYYY', 'MMMDDYYYY', 'MMMDDYY']\r\nconst CONST_WEEK_DAY_NAME = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nconst CONST_MONTH_31DAY = [1, 3, 5, 7, 8, 10, 12];\r\nconst CONST_MONTH_28DAY = 2;\r\nconst CONST_MONTH_30DAY = [4, 6, 9, 11];\r\nconst CONST_DAYS_OF_MONTHS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // NOT leap year\r\n// get time zone (date.getTimezoneOffset() / -60)\r\n\r\nfunction formatDate(format, input = new Date) {\r\n    let seperate1;\r\n    let seperate2;\r\n    const rgexD_M_Y1 = /^([0-2][0-9]|(3)[0-1])(\\/)(((0)[0-9])|((1)[0-2]))(\\/)\\d{4}$/i;\r\n    const rgexD_M_Y2 = /^([0-2][0-9]|(3)[0-1])(.)(((0)[0-9])|((1)[0-2]))(.)\\d{4}$/i;\r\n    const rgexD_M_Y3 = /^([0-2][0-9]|(3)[0-1])(,)(((0)[0-9])|((1)[0-2]))(,)\\d{4}$/i;\r\n    const rgexD_M_Y4 = /^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)\\d{4}$/i;\r\n\r\n    if (rgexD_M_Y1.test(input) || rgexD_M_Y2.test(input) || rgexD_M_Y3.test(input) || rgexD_M_Y4.test(input)) {\r\n        if (input.includes('/'))\r\n            input = input.split('/').reverse().join('-');\r\n\r\n        else if (input.includes(','))\r\n            input = input.split(',').reverse().join('-');\r\n\r\n        else if (input.includes('.'))\r\n            input = input.split('.').reverse().join('-');\r\n\r\n        else if (input.includes('-'))\r\n            input = input.split('-').reverse().join('-');\r\n\r\n        else if (input.includes(' '))\r\n            input = input.split(' ').reverse().join('-');\r\n    }\r\n    else {\r\n        if (input.includes('/'))\r\n            input = input.split('/').join('-');\r\n\r\n        else if (input.includes(','))\r\n            input = input.split(',').join('-');\r\n\r\n        else if (input.includes('.'))\r\n            input = input.split('.').join('-');\r\n\r\n        else if (input.includes('-'))\r\n            input = input.split('-').join('-');\r\n\r\n        else if (input.includes(' '))\r\n            input = input.split(' ').join('-');\r\n    }\r\n\r\n    let index;\r\n    let formatD = '';\r\n    let formatM = '';\r\n    let formatY = '';\r\n\r\n    let resultD = '';\r\n    let resultM = '';\r\n    let resultY = '';\r\n\r\n    let numD;\r\n    let numM;\r\n    let numY;\r\n\r\n    let arr1 = format.split('').map(item => {\r\n        return item.toUpperCase();\r\n    });\r\n\r\n    for (let i = 0; i < arr1.length; i++) {\r\n        if (arr1[i] === 'D') {\r\n            numD = i;\r\n            formatD += arr1[i];\r\n        } else if (arr1[i] === 'M') {\r\n            numM = i;\r\n            formatM += arr1[i];\r\n        } else if (arr1[i] === 'Y') {\r\n            numY = i;\r\n            formatY += arr1[i];\r\n        }\r\n    } // for\r\n\r\n    format = arr1.filter(item => {\r\n        return item !== '/' && item !== '.' && item !== ',' && item !== '-' && item !== ' ';\r\n    }).join('').toUpperCase();\r\n\r\n    const mLength = CONST_GET_M.length;\r\n    const dLength = CONST_GET_D.length;\r\n\r\n    for (let i = 0; i < mLength; i++) {\r\n        if (format === CONST_GET_M[i])\r\n            index = arr1.indexOf('M');\r\n    }\r\n    for (let i = 0; i < dLength; i++) {\r\n        if (format === CONST_GET_D[i])\r\n            index = arr1.indexOf('D');\r\n    }\r\n\r\n    const arr2 = arr1.slice(index);\r\n\r\n    arr1 = arr1.splice(0, index);\r\n\r\n    seperate1 = arr1.filter(item => {\r\n        return item === '/' || item === '.' || item === ',' || item === '-' || item === ' ';\r\n    }).join('');\r\n\r\n    seperate2 = arr2.filter(item => {\r\n        return item === ' ' || item === '-' || item === '/' || item === ',' || item === '.';\r\n    }).join('');\r\n\r\n    const time = new Date(input);\r\n    const yearLong = time.getFullYear();\r\n    const yearShort = yearLong.toString().slice(2);\r\n    const month = time.getMonth() + 1;\r\n    const monthString = month.toString().padStart(2, 0);\r\n    const date = time.getDate();\r\n    const dateString = date.toString().padStart(2, 0);\r\n    const nameMonthShort = time.toLocaleDateString('en-US', { month: 'short' });\r\n    const nameMonthLong = time.toLocaleDateString('en-US', { month: 'long' });\r\n\r\n    if (formatD === 'D') {\r\n        resultD = date;\r\n    } else if (formatD === 'DD') {\r\n        resultD = dateString;\r\n    } else if (formatD === 'DDD') {\r\n\r\n    } else if (formatD === 'DDDD') {\r\n\r\n    }\r\n\r\n    if (formatM === 'M') {\r\n        resultM = month;\r\n    } else if (formatM === 'MM') {\r\n        resultM = monthString;\r\n    } else if (formatM === 'MMM') {\r\n        resultM = nameMonthShort;\r\n    } else if (formatM === 'MMMM') {\r\n        resultM = nameMonthLong;\r\n    }\r\n\r\n    if (formatY === 'YY') {\r\n        resultY = yearShort;\r\n    } else if (formatY === 'YYYY') {\r\n        resultY = yearLong;\r\n    }\r\n\r\n    if (numD < numM && numD < numY)\r\n        return `${resultD}${seperate1}${resultM}${seperate2}${resultY}`;\r\n\r\n    else if (numD > numM && numD > numY)\r\n        return `${resultY}${seperate1}${resultM}${seperate2}${resultD}`;\r\n\r\n    else if (numM < numD && numM < numY)\r\n        return `${resultM}${seperate1}${resultD}${seperate2}${resultY}`;\r\n\r\n    // part/ portion\r\n} // formatDate\r\n\r\nfunction getWeekdayName(input = new Date) {\r\n    const time = new Date(input);\r\n    const day = time.getDay();\r\n\r\n    return CONST_WEEK_DAY_NAME[day];\r\n} // getWeekdayName\r\n\r\nfunction checkEnvironment() {\r\n    const { userAgent } = navigator;\r\n    const userAgentUppercased = userAgent.toUpperCase();\r\n\r\n    // OS \r\n    let os = 'Other';\r\n    if (userAgentUppercased.indexOf(\"WIN\") != -1)\r\n        os = \"Windows\";\r\n    else if (userAgentUppercased.indexOf(\"MAC\") != -1)\r\n        os = \"Mac\";\r\n    else if (userAgentUppercased.indexOf(\"ANDROID\") != -1)\r\n        os = \"Android\";\r\n    else if (userAgentUppercased.indexOf(\"LIKE MAC\") != -1)\r\n        os = \"iOS\";\r\n    else if (userAgentUppercased.indexOf(\"LINUX\") != -1)\r\n        os = \"Linux\";\r\n    else os;\r\n    // Browser\r\n    let browser = 'Other'; // opera // coc coc\r\n    if (userAgentUppercased.includes('FIREFOX/'))\r\n        browser = 'Firefox';\r\n    else if (userAgentUppercased.includes('EDG/'))\r\n        browser = 'Edg';\r\n    else if (userAgentUppercased.includes('CHROME/'))\r\n        browser = 'Chrome';\r\n    else if (userAgentUppercased.includes('SAFARI/'))\r\n        browser = 'Safari';\r\n    else browser;\r\n\r\n    return {\r\n        os,\r\n        browser\r\n    }\r\n} // checkEnvironment\r\n\r\nfunction getCurrentTime_ISOformat() {\r\n    const newTime = new Date();\r\n    const minutes = newTime.getMinutes();\r\n    const hours = newTime.getHours();\r\n    const date = newTime.getDate();\r\n    const month = newTime.getMonth() + 1;\r\n    const year = newTime.getFullYear();\r\n    const second = newTime.getSeconds();\r\n    const help = item => item.toString().padStart(2, '0');\r\n\r\n    return `${help(year)}-${help(month)}-${date}T${help(hours)}:${help(minutes)}:${help(second)}`;\r\n} // getCurrentTime_ISOformat\r\n\r\n// getDateParts\r\nfunction getDateParts(input = new Date()) {\r\n    const newTime = new Date(input);\r\n    const day = newTime.getDate();\r\n    const month = newTime.getMonth() + 1;\r\n    const year = newTime.getFullYear();\r\n\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n\r\n} // getDateParts\r\n\r\nfunction getTotalDaysDifferent(fromDate, toDate) {\r\n    const secondsInADay = 24 * 60 * 60;\r\n    const stampOfToday = (new Date(formatDate('YYYY-MM-DD', fromDate))).getTime();\r\n    const stampOfInput = (new Date(formatDate('YYYY-MM-DD', toDate))).getTime();\r\n    const deltaInSeconds = (stampOfInput - stampOfToday) / 1000;\r\n\r\n    return Math.ceil(deltaInSeconds / secondsInADay);\r\n} // getTotalDaysDifferent\r\n\r\n\r\n// getDeadline = getDateDifferent(input)\r\n// moment, date-fns\r\n\r\nfunction foo(date1, date2) {\r\n    const { year: y1, month: m1, day: d1 } = date1;\r\n    const { year: y2, month: m2, day: d2 } = date2;\r\n\r\n    const diffTeller = (part, diff) => (\r\n        diff > 1 ?\r\n            `${diff}${part}s` :\r\n            diff === 1 ?\r\n                `${diff}${part}` :\r\n                ''\r\n    ) // diffTeller\r\n\r\n    let diffY = y2 - y1;\r\n    let diffM = m2 - m1;\r\n    let diffD = d2 - d1;\r\n\r\n    if (m2 < m1 || d2 < d1) {\r\n        diffY = Math.max(0, diffy - 1);\r\n        diffM = m2 + 12 - m1;\r\n    } // if\r\n\r\n    return `${diffTeller('year', diffY)} ${diffTeller('month', diffM)} ${diffTeller('day', diffD)}`;\r\n}\r\n\r\nfunction getDateDifferent(input) {\r\n    // { age, name } = user; // obj destructor\r\n    // arr = [1, 2, 3, 4, 5, 6]\r\n    // const [a, b, c] = arr; // arr destructor\r\n    // a = arr[0]\r\n    // b = arr[1]\r\n    // c= arr[2]\r\n    // a = 1, b = 2\r\n\r\n    const { day: inputD, month: inputM, year: inputY } = getDateParts(formatDate('YYYY-MM-DD', input));\r\n    const { day: todayD, month: todayM, year: todayY } = getDateParts(); // property alias\r\n\r\n    // totalDaysDifferent\r\n    let diffYears;\r\n    let diffMonths;\r\n    let diffDays;\r\n\r\n    //#region count year, month, day.\r\n    diffYears = (inputY - todayY);\r\n\r\n    if (inputM >= todayM)\r\n        diffMonths = inputM - todayM;\r\n    else {\r\n        diffMonths = 12 + inputM - todayM;\r\n        diffYears -= 1;\r\n    }\r\n\r\n    diffDays = inputD - todayD;\r\n\r\n    if (inputD - todayD < 0 && inputM == todayM) {\r\n        diffYears -= 1;\r\n        diffMonths += 11;\r\n\r\n        CONST_MONTH_31DAY.forEach(item => {\r\n\r\n            if (inputM == item)\r\n                diffDays += 31;\r\n\r\n            else if (inputM == CONST_MONTH_28DAY) {\r\n                diffDays += 28;\r\n            }\r\n        }); // forEach\r\n\r\n        CONST_MONTH_30DAY.forEach(item => {\r\n            if (inputM == item) {\r\n                diffDays += 30;\r\n            }\r\n        }); //forEach\r\n\r\n    } else if (inputD - todayD >= 0)\r\n        diffDays = inputD - todayD;\r\n    else {\r\n        CONST_MONTH_31DAY.forEach(item => {\r\n            if (todayM == item) {\r\n                diffDays += 31;\r\n\r\n                if (diffMonths <= 0) {\r\n                    diffMonths += 11;\r\n                    diffYears -= 1;\r\n                } else\r\n                    diffMonths -= 1;\r\n\r\n            } else if (todayM == CONST_MONTH_28DAY) {\r\n                diffDays += 28;\r\n                diffMonths -= 1;\r\n            }\r\n        }); // forEach\r\n        CONST_MONTH_30DAY.forEach(item => {\r\n            if (todayM == item) {\r\n                diffDays += 30;\r\n                diffMonths -= 1;\r\n            }\r\n        }); //forEach\r\n    } // else \r\n    // #endregion count year, month, day.\r\n\r\n    const diffDaysTotal = getTotalDaysDifferent(getCurrentTime_ISOformat(), `${inputY}-${inputM}-${inputD}`);\r\n\r\n    const text =\r\n        diffDaysTotal == -1 ?\r\n            'Yesterday' :\r\n            diffDaysTotal == 0 ?\r\n                '' :\r\n                diffDaysTotal == 1 ?\r\n                    'Tomorrow' :\r\n                    diffDaysTotal <= 6 ?\r\n                        `${diffDaysTotal} day` :\r\n                        diffDaysTotal == 7 ?\r\n                            `Next ${getWeekdayName()}` :\r\n                            `${diffYears <= 0 ? '' : `${diffYears} year`} ${diffMonths <= 0 ? '' : `${diffMonths} month`} ${diffDays <= 0 ? '' : `${diffDays} day`}`\r\n\r\n    return {\r\n        totalDays: diffDaysTotal,\r\n        text\r\n    }\r\n} // getDeadline \r\n\r\nfunction moveItem(arr, fromIndex, toIndex) {\r\n    const item = arr.at(fromIndex);\r\n\r\n    // remove item from current location\r\n    arr.splice(fromIndex, 1);\r\n    // insert toIndex\r\n    arr.splice(toIndex, 0, item);\r\n\r\n    return arr;\r\n} // moveItem\r\n\r\n\r\n// function getDateDifferent(date1, date2 = new Date) {\r\n//     return {\r\n//         diffDayTotals: 400,\r\n//         diffYears: 1,\r\n//         diffMonths: 2,\r\n//         diffDays: 0,\r\n//     }\r\n// }\r\n\n\n//# sourceURL=webpack://mylib/./assets/js/refactor/utils-refactor.js?")}},__webpack_module_cache__={},inProgress,dataWebpackPrefix;function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var r=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var r in n)__webpack_require__.o(n,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},__webpack_require__.f={},__webpack_require__.e=e=>Promise.all(Object.keys(__webpack_require__.f).reduce(((n,r)=>(__webpack_require__.f[r](e,n),n)),[])),__webpack_require__.u=e=>e+".min.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),inProgress={},dataWebpackPrefix="mylib:",__webpack_require__.l=(e,n,r,t)=>{if(inProgress[e])inProgress[e].push(n);else{var o,i;if(void 0!==r)for(var a=document.getElementsByTagName("script"),s=0;s<a.length;s++){var d=a[s];if(d.getAttribute("src")==e||d.getAttribute("data-webpack")==dataWebpackPrefix+r){o=d;break}}o||(i=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,__webpack_require__.nc&&o.setAttribute("nonce",__webpack_require__.nc),o.setAttribute("data-webpack",dataWebpackPrefix+r),o.src=e),inProgress[e]=[n];var c=(n,r)=>{o.onerror=o.onload=null,clearTimeout(l);var t=inProgress[e];if(delete inProgress[e],o.parentNode&&o.parentNode.removeChild(o),t&&t.forEach((e=>e(r))),n)return n(r)},l=setTimeout(c.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=c.bind(null,o.onerror),o.onload=c.bind(null,o.onload),i&&document.head.appendChild(o)}},__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var n=__webpack_require__.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})(),(()=>{var e={main:0};__webpack_require__.f.j=(n,r)=>{var t=__webpack_require__.o(e,n)?e[n]:void 0;if(0!==t)if(t)r.push(t[2]);else{var o=new Promise(((r,o)=>t=e[n]=[r,o]));r.push(t[2]=o);var i=__webpack_require__.p+__webpack_require__.u(n),a=new Error;__webpack_require__.l(i,(r=>{if(__webpack_require__.o(e,n)&&(0!==(t=e[n])&&(e[n]=void 0),t)){var o=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;a.message="Loading chunk "+n+" failed.\n("+o+": "+i+")",a.name="ChunkLoadError",a.type=o,a.request=i,t[1](a)}}),"chunk-"+n,n)}};var n=(n,r)=>{var t,o,[i,a,s]=r,d=0;if(i.some((n=>0!==e[n]))){for(t in a)__webpack_require__.o(a,t)&&(__webpack_require__.m[t]=a[t]);s&&s(__webpack_require__)}for(n&&n(r);d<i.length;d++)o=i[d],__webpack_require__.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=self.webpackChunkmylib=self.webpackChunkmylib||[];r.forEach(n.bind(null,0)),r.push=n.bind(null,r.push.bind(r))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__("./assets/js/refactor/main-refactor.js");mylib=__webpack_exports__})();